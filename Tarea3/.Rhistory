Maximo = max(totalmin, na.rm = TRUE)
)
stats_hhmm <- stats %>%
mutate(
media = minutes_to_hhmm(media),
mediana = minutes_to_hhmm(mediana),
desviacion_estandar = minutes_to_hhmm(desviacion_estandar),
minimo = minutes_to_hhmm(minimo),
primer_cuartil = minutes_to_hhmm(primer_cuartil),
tercer_cuartil = minutes_to_hhmm(tercer_cuartil),
maximo = minutes_to_hhmm(maximo)
)
# Calcular los estadísticos descriptivos
stats <- df %>%
summarise(
Media = mean(totalmin, na.rm = TRUE),
Mediana = median(totalmin, na.rm = TRUE),
Desviacion_estandar = sd(totalmin, na.rm = TRUE),
Minimo = min(totalmin, na.rm = TRUE),
Primer_cuartil = quantile(totalmin, 0.25, na.rm = TRUE),
Tercer_cuartil = quantile(totalmin, 0.75, na.rm = TRUE),
Maximo = max(totalmin, na.rm = TRUE)
)
stats_hhmm <- stats %>%
mutate(
Media = minutes_to_hhmm(media),
Mediana = minutes_to_hhmm(mediana),
Desviacion_estandar = minutes_to_hhmm(desviacion_estandar),
Minimo = minutes_to_hhmm(minimo),
Primer_cuartil = minutes_to_hhmm(primer_cuartil),
Tercer_cuartil = minutes_to_hhmm(tercer_cuartil),
Maximo = minutes_to_hhmm(maximo)
)
# Calcular los estadísticos descriptivos
stats <- df %>%
summarise(
Media = mean(totalmin, na.rm = TRUE),
Mediana = median(totalmin, na.rm = TRUE),
Desviacion_estandar = sd(totalmin, na.rm = TRUE),
Minimo = min(totalmin, na.rm = TRUE),
Primer_cuartil = quantile(totalmin, 0.25, na.rm = TRUE),
Tercer_cuartil = quantile(totalmin, 0.75, na.rm = TRUE),
Maximo = max(totalmin, na.rm = TRUE)
)
stats_hhmm <- stats %>%
mutate(
Media = minutes_to_hhmm(Media),
Mediana = minutes_to_hhmm(Mediana),
Desviacion_estandar = minutes_to_hhmm(Desviacion_estandar),
Minimo = minutes_to_hhmm(Minimo),
Primer_cuartil = minutes_to_hhmm(Primer_cuartil),
Tercer_cuartil = minutes_to_hhmm(Tercer_cuartil),
Maximo = minutes_to_hhmm(Maximo)
)
# calculamos los estadísticos descriptivos
stats <- df %>%
summarise(
Media = mean(totalmin, na.rm = TRUE),
Mediana = median(totalmin, na.rm = TRUE),
Desviacion_estandar = sd(totalmin, na.rm = TRUE),
Minimo = min(totalmin, na.rm = TRUE),
Primer_cuartil = quantile(totalmin, 0.25, na.rm = TRUE),
Tercer_cuartil = quantile(totalmin, 0.75, na.rm = TRUE),
Maximo = max(totalmin, na.rm = TRUE)
)
# Crear una tabla con los estadísticos descriptivos
tabla_calidad <- as.data.frame(t(stats_hhmm))
# calculamos los estadísticos descriptivos
stats <- df %>%
summarise(
Media = mean(totalmin, na.rm = TRUE),
Mediana = median(totalmin, na.rm = TRUE),
Desviacion_estandar = sd(totalmin, na.rm = TRUE),
Minimo = min(totalmin, na.rm = TRUE),
Primer_cuartil = quantile(totalmin, 0.25, na.rm = TRUE),
Tercer_cuartil = quantile(totalmin, 0.75, na.rm = TRUE),
Maximo = max(totalmin, na.rm = TRUE)
)
# Crear una tabla con los estadísticos descriptivos
tabla_calidad <- as.data.frame(t(stats))
colnames(tabla_calidad) <- "Valor"
tabla_calidad$Estadistico <- rownames(tabla_calidad)
rownames(tabla_calidad) <- NULL
tabla_calidad$Valor <- minutes_to_hhmm(tabla_calidad$Valor)
# calculamos los estadísticos descriptivos
stats <- df %>%
summarise(
Media = mean(totalmin, na.rm = TRUE),
Mediana = median(totalmin, na.rm = TRUE),
Desviacion_estandar = sd(totalmin, na.rm = TRUE),
Minimo = min(totalmin, na.rm = TRUE),
Primer_cuartil = quantile(totalmin, 0.25, na.rm = TRUE),
Tercer_cuartil = quantile(totalmin, 0.75, na.rm = TRUE),
Maximo = max(totalmin, na.rm = TRUE)
)
# Crear una tabla con los estadísticos descriptivos
tabla_calidad <- as.data.frame(t(stats))
colnames(tabla_calidad) <- "Valor"
tabla_calidad$Estadistico <- rownames(tabla_calidad)
rownames(tabla_calidad) <- NULL
# Mostrar la tabla usando knitr::kable
kable(tabla_calidad, col.names = c( "Valor", "Estadístico"), caption = "Tabla de Estadísticos Descriptivos de la Variable totalmin. (Fuente: CASEN 2017)")
View(df)
dfRM <- df %>%
mutate(region = as.factor(region)) %>%
filter(region)
dfRM <- df %>%
mutate(region = as.factor(region)) %>%
filter(region == 13)
# calculamos los estadísticos descriptivos
stats <- df %>%
summarise(
Media = mean(totalmin, na.rm = TRUE),
Mediana = median(totalmin, na.rm = TRUE),
Desviacion_estandar = sd(totalmin, na.rm = TRUE),
Minimo = min(totalmin, na.rm = TRUE),
Primer_cuartil = quantile(totalmin, 0.25, na.rm = TRUE),
Tercer_cuartil = quantile(totalmin, 0.75, na.rm = TRUE),
Maximo = max(totalmin, na.rm = TRUE)
)
# Creamos la tabla para presentarla
RM <- as.data.frame(t(stats))
colnames(RM) <- "Valor"
RM$Estadistico <- rownames(RM)
rownames(RM) <- NULL
# Mostramos la tabla usando knitr::kable
kable(RM, col.names = c( "Valor", "Estadístico"), caption = "Tabla de Estadísticos Descriptivos de la Variable totalmin. (Fuente: CASEN 2017)")
# calculamos los estadísticos descriptivos
stats <- dfRM %>%
summarise(
Media = mean(totalmin, na.rm = TRUE),
Mediana = median(totalmin, na.rm = TRUE),
Desviacion_estandar = sd(totalmin, na.rm = TRUE),
Minimo = min(totalmin, na.rm = TRUE),
Primer_cuartil = quantile(totalmin, 0.25, na.rm = TRUE),
Tercer_cuartil = quantile(totalmin, 0.75, na.rm = TRUE),
Maximo = max(totalmin, na.rm = TRUE)
)
# Creamos la tabla para presentarla
RM <- as.data.frame(t(stats))
colnames(RM) <- "Valor"
RM$Estadistico <- rownames(RM)
rownames(RM) <- NULL
# Mostramos la tabla usando knitr::kable
kable(RM, col.names = c( "Valor", "Estadístico"), caption = "Tabla de Estadísticos Descriptivos de la Variable totalmin. (Fuente: CASEN 2017)")
df <- df %>%
mutate(sexo = as.factor(sexo)) %>% # factor
filter(o25b > 4) # 5 viajes o más
hist(df$totalmin)
total_mujeres <- df %>%
filter(sexo == 2) %>%
nrow()
total_mujeres <- df %>%
filter(sexo == 2) %>%
nrow()
total_mujeres
mujeres_60_mas <- df %>%
filter(sexo == 2 & totalmin >= 60) %>%
nrow()
mujeres_60_mas
probabilidad
probabilidad <- mujeres_60_mas / total_mujeres
probabilidad
df <- casen
df <- df %>%
mutate(ocup = case_when(
o1 == 2 & o2 == 2 & o3 == 2 & o6 == 1 ~ 2,
o1 == 1 | o2 == 1 | o3 == 1 ~ 1,
TRUE ~ NA_real_
)) %>%
mutate(ocup = factor(ocup, levels = c(1,2)))
df <- df %>%
mutate(ocup = case_when(
edad>=15 & o1 == 2 & o2 == 2 & o3 == 2 & o6 == 1 ~ 2,
edad>=15 & (o1 == 1 | o2 == 1 | o3) == 1 ~ 1,
TRUE ~ NA_real_
)) %>%
mutate(ocup = factor(ocup, levels = c(1,2)))
df <- df %>%
mutate(ocup = case_when(
edad>=15 & o1 == 2 & o2 == 2 & o3 == 2 & o6 == 1 ~ 2,
edad>=15 & (o1 == 1 | o2 == 1 | o3) == 1 ~ 1,
edad>=15 & o3 == 2 & o6 == 2 ~ 3
TRUE ~ NA_real_
df <- df %>%
mutate(ocup = case_when(
edad>=15 & o1 == 2 & o2 == 2 & o3 == 2 & o6 == 1 ~ 2,
edad>=15 & (o1 == 1 | o2 == 1 | o3) == 1 ~ 1,
edad>=15 & o3 == 2 & o6 == 2 ~ 3,
TRUE ~ NA_real_
)) %>%
mutate(ocup = factor(ocup, levels = c(1, 2, 3)))
frecuencias <- df %>%
filter(!is.na(ocup))
frecuencias
frecuencias <- df %>%
filter(!is.na(ocup)) %>%
count(ocup)
frecuencias
df <- df %>%
mutate(ocup = case_when(
edad>=15 & o1 == 2 & o2 == 2 & o3 == 2 & o6 == 1 ~ 2,
edad>=15 & (o1 == 1 | o2 == 1 | o3) == 1 ~ 1,
edad>=15 & o3 == 2 & o6 == 2 ~ 3,
TRUE ~ NA_real_
)) %>%
mutate(ocup = factor(ocup, levels = c(1, 2, 3)))
frecuencias <- df %>%
filter(!is.na(ocup)) %>%
count(ocup)
frecuencias
frecuencias <- df %>%
filter(!is.na(ocup)) %>%
count(ocup) %>%
mutate(frecuencia = n / sum(n))
frecuencias
df <- df %>%
mutate(ocup = case_when(
edad>=15 & o1 == 2 & o2 == 2 & o3 == 2 & o6 == 1 ~ 'No ocupado',
edad>=15 & (o1 == 1 | o2 == 1 | o3) == 1 ~ 'Ocupado',
edad>=15 & o3 == 2 & o6 == 2 ~ 'Inactivo',
TRUE ~ NA_real_
))
edad>=15 & o3 == 2 & o6 == 2 ~ 'Inactivo,
df <- df %>%
mutate(ocup = case_when(
edad>=15 & o1 == 2 & o2 == 2 & o3 == 2 & o6 == 1 ~ 'No ocupado',
df <- df %>%
mutate(ocup = case_when(
edad>=15 & o1 == 2 & o2 == 2 & o3 == 2 & o6 == 1 ~ 2,
edad>=15 & (o1 == 1 | o2 == 1 | o3) == 1 ~ 1,
edad>=15 & o3 == 2 & o6 == 2 ~ 3,
TRUE ~ NA_real_
)) %>%
mutate(ocup = factor(ocup, levels = c(1, 2, 3)))
df <- df %>%
mutate(ocup = case_when(
edad>=15 & o1 == 2 & o2 == 2 & o3 == 2 & o6 == 1 ~ 2,
edad>=15 & (o1 == 1 | o2 == 1 | o3) == 1 ~ 1,
edad>=15 & o3 == 2 & o6 == 2 ~ 3,
TRUE ~ NA_real_
)) %>%
mutate(ocup = factor(ocup, levels = c(1, 2, 3))) %>%
mutate(ocup = recode(ocup,
`1` = 'Ocupado',
`2` = 'No ocupado',
`3` = 'Inactivo')) %>%
mutate(ocup = factor(ocup, levels = c('Ocupado', 'No ocupado', 'Inactivo')))
frecuencias <- df %>%
filter(!is.na(ocup)) %>%
count(ocup) %>%
mutate(frecuencia = n / sum(n))
tabla <- frecuencias %>%
select(ocup, frecuencia) %>%
rename(Ocupación = Ocup, 'Frecuencia relativa' = frecuencia)
frecuencias <- df %>%
filter(!is.na(ocup)) %>%
count(ocup) %>%
mutate(frecuencia = n / sum(n))
tabla <- frecuencias %>%
select(ocup, frecuencia) %>%
rename(Ocupación = Ocup, 'Frecuencia relativa' = frecuencia)
frecuencias <- df %>%
filter(!is.na(ocup)) %>%
count(ocup) %>%
mutate(frecuencia = n / sum(n))
tabla <- frecuencias %>%
select(ocup, frecuencia) %>%
rename(Ocupación = ocup, 'Frecuencia relativa' = frecuencia)
tabla %>%
kable(caption = 'Tabla de Calidad de Frecuencias Relativas de Ocupación')
frecuencias
frecuencias <- df %>%
filter(!is.na(ocup)) %>%
count(ocup) %>%
mutate(frecuencia = n / sum(n))
tabla <- frecuencias %>%
select(ocup, frecuencia) %>%
rename(Ocupación = ocup, 'Frecuencia relativa' = frecuencia)
tabla %>%
kable(caption = 'Tabla de Calidad de Frecuencias Relativas de Ocupación')
frecuencias <- df %>%
filter(!is.na(ocup)) %>%
count(ocup) %>%
mutate(frecuencia = n / sum(n))
tabla <- frecuencias %>%
select(ocup, frecuencia) %>%
rename(Ocupación = ocup, 'Frecuencia relativa' = frecuencia)
tabla %>%
kable(caption = 'Tabla de Calidad de Frecuencias Relativas de Ocupación (Fuente: CASEN 2017)')
df <- df %>%
filter(!is.na(ocup))
head(df)
tabla_calidad <- df %>%
group_by(ocup) %>%
summarise(
Media = mean(totalmin, na.rm = TRUE),
Mediana = median(totalmin, na.rm = TRUE),
Desviacion_estandar = sd(totalmin, na.rm = TRUE),
Minimo = min(totalmin, na.rm = TRUE),
Primer_cuartil = quantile(totalmin, 0.25, na.rm = TRUE),
Tercer_cuartil = quantile(totalmin, 0.75, na.rm = TRUE),
Maximo = max(totalmin, na.rm = TRUE)
) %>%
arrange(ocup)
tabla_calidad <- df %>%
group_by(ocup) %>%
summarise(
Media = mean(edad, na.rm = TRUE),
Mediana = median(edad, na.rm = TRUE),
Desviacion_estandar = sd(edad, na.rm = TRUE),
Minimo = min(edad, na.rm = TRUE),
Primer_cuartil = quantile(edad, 0.25, na.rm = TRUE),
Tercer_cuartil = quantile(edad, 0.75, na.rm = TRUE),
Maximo = max(edad, na.rm = TRUE)
) %>%
arrange(ocup)
tabla_calidad %>%
kable(caption = 'Estadísticos Descriptivos de la Edad por Ocupación')
tabla_calidad <- df %>%
group_by(ocup) %>%
summarise(
Media = mean(edad, na.rm = TRUE),
Mediana = median(edad, na.rm = TRUE),
Desviacion_estandar = sd(edad, na.rm = TRUE),
Minimo = min(edad, na.rm = TRUE),
Primer_cuartil = quantile(edad, 0.25, na.rm = TRUE),
Tercer_cuartil = quantile(edad, 0.75, na.rm = TRUE),
Maximo = max(edad, na.rm = TRUE)
)
tabla_calidad %>%
kable(caption = 'Estadísticos Descriptivos de la Edad por Ocupación')
tabla_calidad <- df %>%
group_by(ocup) %>%
summarise(
Media = mean(edad, na.rm = TRUE),
Mediana = median(edad, na.rm = TRUE),
Desviacion_estandar = sd(edad, na.rm = TRUE),
Minimo = min(edad, na.rm = TRUE),
Primer_cuartil = quantile(edad, 0.25, na.rm = TRUE),
Tercer_cuartil = quantile(edad, 0.75, na.rm = TRUE),
Maximo = max(edad, na.rm = TRUE)
)
tabla_calidad <- tabla_calidad %>%
pivot_longer(cols = -ocup, names_to = "Estadístico", values_to = "Valor") %>%
pivot_wider(names_from = ocup, values_from = Valor)
colnames(tabla_calidad) <- c('Estadístico',
'Ocupado',
'No ocupado')
tabla_calidad %>%
kable(caption = 'Estadísticos Descriptivos de la Edad por Ocupación')
tabla_calidad <- df %>%
group_by(ocup) %>%
summarise(
Media = mean(edad, na.rm = TRUE),
Mediana = median(edad, na.rm = TRUE),
Desviacion_estandar = sd(edad, na.rm = TRUE),
Minimo = min(edad, na.rm = TRUE),
Primer_cuartil = quantile(edad, 0.25, na.rm = TRUE),
Tercer_cuartil = quantile(edad, 0.75, na.rm = TRUE),
Maximo = max(edad, na.rm = TRUE)
)
tabla_calidad <- tabla_calidad %>% #trasponemos porque quedaba muy desordenada
pivot_longer(cols = -ocup, names_to = "Estadístico", values_to = "Valor") %>%
pivot_wider(names_from = ocup, values_from = Valor)
colnames(tabla_calidad) <- c('Estadístico',
'Ocupado',
'No ocupado')
tabla_calidad %>%
kable(caption = 'Estadísticos Descriptivos de la Edad por Ocupación')
df <- df %>%
filter(ocup == 'Ocupado')
View(df)
View(df)
df <- casen # reiniciamos el análisis
df <- df %>%
mutate(
totalmin = ifelse(is.na(o25a_hr),
0,
o25a_hr * 60) + ifelse(is.na(o25a_min),
0,
o25a_min)
)
minutes_to_hhmm <- function(minutes) {
hours <- floor(minutes / 60)
mins <- minutes %% 60
sprintf("%02d:%02d", hours, mins)
}
df <- df %>%
mutate(total_time = sapply(totalmin, minutes_to_hhmm))
df <- casen # reiniciamos el análisis
df <- df %>%
mutate(
totalmin = ifelse(is.na(o25a_hr),
0,
o25a_hr * 60) + ifelse(is.na(o25a_min),
0,
o25a_min)
)
minutes_to_hhmm <- function(minutes) {
hours <- floor(minutes / 60)
mins <- minutes %% 60
sprintf("%02d:%02d", hours, mins)
}
df <- df %>%
mutate(total_time = sapply(totalmin, minutes_to_hhmm)) %>%
mutate(ocup = case_when(
edad>=15 & o1 == 2 & o2 == 2 & o3 == 2 & o6 == 1 ~ 2,
edad>=15 & (o1 == 1 | o2 == 1 | o3) == 1 ~ 1,
edad>=15 & o3 == 2 & o6 == 2 ~ 3,
TRUE ~ NA_real_
)) %>%
mutate(ocup = factor(ocup,
levels = c(1, 2, 3))) %>%
mutate(ocup = recode(ocup,
`1` = 'Ocupado',
`2` = 'No ocupado',
`3` = 'Inactivo')) %>%
mutate(ocup = factor(ocup,
levels = c('Ocupado',
'No ocupado',
'Inactivo'))) %>%
filter(ocup == 'Ocupado')
ggplot(df, aes(x=total_time, fill = factor(sexo))) +
geom_histogram(binwidth = 5,
position = "identity",
alpha = 0.7) +
labs(title = "Histograma de Tiempos de Viaje por Género",
x = "Tiempo de Viaje (minutos)",
y = "Frecuencia") +
scale_fill_manual(values = c("blue", "pink")) +
theme_minimal()
ggplot(df, aes(x=totalmin, fill = factor(sexo))) +
geom_histogram(binwidth = 5,
position = "identity",
alpha = 0.7) +
labs(title = "Histograma de Tiempos de Viaje por Género",
x = "Tiempo de Viaje (minutos)",
y = "Frecuencia") +
scale_fill_manual(values = c("blue", "pink")) +
theme_minimal()
df <- casen # reiniciamos el análisis
df <- df %>%
mutate(
totalmin = ifelse(is.na(o25a_hr),
0,
o25a_hr * 60) + ifelse(is.na(o25a_min),
0,
o25a_min)
)
minutes_to_hhmm <- function(minutes) {
hours <- floor(minutes / 60)
mins <- minutes %% 60
sprintf("%02d:%02d", hours, mins)
}
df <- df %>%
mutate(o1 = as.factor(o1)) %>%
filter(o1 == 1) %>%
filter(o25a_min != 99) %>%
filter(o25a_hr != 99) %>%
mutate(total_time = sapply(totalmin, minutes_to_hhmm)) %>%
mutate(ocup = case_when(
edad>=15 & o1 == 2 & o2 == 2 & o3 == 2 & o6 == 1 ~ 2,
edad>=15 & (o1 == 1 | o2 == 1 | o3) == 1 ~ 1,
edad>=15 & o3 == 2 & o6 == 2 ~ 3,
TRUE ~ NA_real_
)) %>%
mutate(ocup = factor(ocup,
levels = c(1, 2, 3))) %>%
mutate(ocup = recode(ocup,
`1` = 'Ocupado',
`2` = 'No ocupado',
`3` = 'Inactivo')) %>%
mutate(ocup = factor(ocup,
levels = c('Ocupado',
'No ocupado',
'Inactivo'))) %>%
filter(ocup == 'Ocupado')
ggplot(df, aes(x=totalmin, fill = factor(sexo))) +
geom_histogram(binwidth = 5,
position = "identity",
alpha = 0.7) +
labs(title = "Histograma de Tiempos de Viaje por Género",
x = "Tiempo de Viaje (minutos)",
y = "Frecuencia") +
scale_fill_manual(values = c("blue", "pink")) +
theme_minimal().
ggplot(df, aes(x=totalmin, fill = factor(sexo))) +
geom_histogram(binwidth = 5,
position = "identity",
alpha = 0.7) +
labs(title = "Histograma de Tiempos de Viaje por Género",
x = "Tiempo de Viaje (minutos)",
y = "Frecuencia") +
scale_fill_manual(values = c("blue", "pink")) +
theme_minimal()
ggplot(df, aes(x=totalmin,)) +
geom_histogram(binwidth = 5,
position = "identity",
alpha = 0.7) +
labs(title = "Histograma de Tiempos de Viaje por Género",
x = "Tiempo de Viaje (minutos)",
y = "Frecuencia") +
theme_minimal()
ggplot(df, aes(x=totalmin,)) +
geom_histogram(binwidth = 5,
position = "identity",
alpha = 0.7) +
labs(title = "Histograma de Tiempos de Viaje",
x = "Tiempo de Viaje (minutos)",
y = "Frecuencia") +
theme_minimal()
